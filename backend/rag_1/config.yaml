name: rag_1

path:
  docs: "docs"
  export_extracted: "${.docs}/extracted/${..name}"
  database: "database/${..name}"

text_llm:
  _target_: langchain_openai.AzureChatOpenAI
  azure_endpoint: ${oc.env:TEXT_OPENAI_ENDPOINT}
  openai_api_key: ${oc.env:TEXT_OPENAI_API_KEY}
  openai_api_version: "2024-02-15-preview"
  deployment_name: "gpt4-turbo"
  temperature: 0.0
  max_tokens: 1024

vision_llm:
  _target_: langchain_openai.AzureChatOpenAI
  azure_endpoint: ${oc.env:VISION_OPENAI_ENDPOINT}
  openai_api_key: ${oc.env:VISION_OPENAI_API_KEY}
  openai_api_version: "2024-02-15-preview"
  deployment_name: "gpt4-vision"
  temperature: 0.0
  max_tokens: 1024

embedding:
  _target_: langchain_experimental.open_clip.OpenCLIPEmbeddings
  model_name: "ViT-H-14"
  checkpoint: "laion2b_s32b_b79k"

vectorstore:
  _target_: langchain_community.vectorstores.Chroma
  collection_name: "clip_photos"
  embedding_function: ${..embedding}
  persist_directory: "${..path.database}/chroma_db"

retriever:
  _target_: langchain_core.vectorstores.VectorStoreRetriever
  vectorstore: ${..vectorstore}
  search_type: "similarity"
  search_kwargs:
    k: 4

ingest:
  clear_database: True

  partition_pdf_func:
    _target_: unstructured.partition.pdf.partition_pdf
    _partial_: True
    _convert_: all
    strategy: "hi_res"
    infer_table_structure: True
    hi_res_model_name: "yolox"
    extract_image_block_types: ["image"]
    extract_image_block_to_payload: True

  chunking_enable: True
  chunking_func:
    _target_: unstructured.chunking.title.chunk_by_title
    _partial_: True
    max_characters: 4000
    new_after_n_chars: 3800
    combine_text_under_n_chars: 2000

  metadata_keys:
    - filename
    - page_number
  table_format: "html" # "text" or "html" or "image"
  image_min_size: [0.1, 0.1]
  table_min_size: [0.0, 0.0]

  export_extracted: True

rag:
  database_url: ${oc.env:DATABASE_URL}
  enable_chat_memory: ${oc.decode:${oc.env:ENABLE_AUTHENTICATION}}
