[tool.poetry]
name = "rag-multimodal-demo"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [
    { include = "backend" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
argon2-cffi = "^23.1.0"
chromadb = "^0.4.24"
dbutils = "^3.1.0"
extra-streamlit-components = "^0.1.71"
httpx-sse = "^0.4.0"
humanize = "^4.9.0"
hydra-core = "^1.3.2"
ipython = "^8.22.2"
langchain = "^0.1.11"
langchain-experimental = "^0.0.53"
langchain-openai = "^0.0.8"
langfuse = "^2.28.1"
langserve = "^0.0.46"
open-clip-torch = "^2.24.0"
openai = "^1.13.3"
opencv-python = "^4.9.0.80"
pdf2image = "^1.17.0"
pdfminer-six = "^20231228"
pikepdf = "^8.13.0"
pillow-heif = "^0.15.0"
pydantic = "^1.10.14"
python-dotenv = "^1.0.1"
python-jose = "^3.3.0"
sqlglot = "^23.0.5"
sse-starlette = "^2.0.0"
streamlit = "^1.32.2"
tenacity = "^8.2.3"
unstructured = "^0.12.5"
unstructured-inference = "^0.7.24"
unstructured-pytesseract = "^0.3.12"


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.3"
nbconvert = "^7.16.2"
nbformat = "^5.9.2"
papermill = "^2.5.0"
pre-commit = "^3.6.2"
pytest = "^8.1.1"
pytest-lazy-fixtures = "^1.0.5"
ruff = "^0.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-include = ["*.ipynb"]
target-version = "py310"

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # isort
    "I",
    # pep8-naming
    "N",
    # pydocstyle
    "D",
    # pyupgrade
    "UP",
    # annotations
    "ANN",
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-quotes
    "Q",
    # flake8-return
    "RET",
    # flake8-simplify
    "SIM",
    # flake8-unused-arguments
    "ARG",
    # flake8-use-pathlib
    "PTH",
    # pandas-vet
    "PD",
]
ignore = ["ANN101", "ANN102", "RET504"]
exclude = [
    "backend/api_plugins/*",
    "backend/database.py",
    "frontend/*",
]

[tool.ruff.lint.pep8-naming]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
classmethod-decorators = ["classmethod", "pydantic.validator", "pydantic.root_validator"]

[tool.ruff.lint.pydocstyle]
convention = "google"
